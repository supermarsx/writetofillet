name: Coverage Badge
on:
  push:
    branches: [ main ]
concurrency:
  group: coverage-badge-main
  cancel-in-progress: true
permissions:
  contents: write
jobs:
  badge:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0
          # Ensure we have a branch instead of detached HEAD so we can push
          ref: ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install -e . pytest pytest-cov pyyaml psutil tomli
      - run: pytest -q --cov=writetofillet --cov-report=xml
      - run: python scripts/gen_coverage_badge.py coverage.xml badges/coverage.svg
      - name: Commit badge
        if: github.event_name == 'push' && github.ref_name == 'main'
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          if git status --porcelain | grep -q -- 'badges/coverage.svg'; then
            git config user.name github-actions
            git config user.email github-actions@github.com
            git pull --ff-only origin main || true
            git add badges/coverage.svg
            if git diff --cached --quiet; then
              echo "No badge changes."
            else
              git commit -m "chore(badge): update coverage badge [skip ci]"
              # Push directly to main so the badge is always on main
              git push origin HEAD:main
            fi
          else
            echo "No badge changes."
          fi
