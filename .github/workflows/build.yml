name: Build
on:
  push:
    branches: [ main, master ]
  pull_request:
jobs:
  build-binaries:
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, windows-latest, macos-13, macos-14]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -e . pyinstaller
      - name: Build
        run: |
          pyinstaller --onefile -n writetofillet src/writetofillet/cli.py
      - name: Rename artifact with OS/arch suffix
        shell: bash
        run: |
          set -euo pipefail
          OS_NAME="${{ runner.os }}"
          case "$OS_NAME" in
            Linux) os=linux; ext="" ;;
            macOS) os=macos; ext="" ;;
            Windows) os=windows; ext=".exe" ;;
            *) echo "Unknown OS $OS_NAME"; exit 1 ;;
          esac
          # Arch inference via runner label
          case "${{ matrix.os }}" in
            macos-13|ubuntu-latest|windows-latest) arch=x64 ;;
            macos-14|ubuntu-24.04-arm) arch=arm64 ;;
            *) arch=unknown ;;
          esac
          src="dist/writetofillet$ext"
          dst="dist/writetofillet-${os}-${arch}$ext"
          mv "$src" "$dst"
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          # Use matrix.os to avoid collisions between macos-13 and macos-14 (both report runner.os=macOS)
          name: writetofillet-${{ matrix.os }}
          path: dist/writetofillet-*

  publish:
    name: Publish CI Release
    needs: build-binaries
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Determine CI tag
        id: tag
        run: |
          YY=$(date +'%y')
          # Use run number to avoid collisions
          TAG="${YY}.ci.${GITHUB_RUN_NUMBER}"
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "Computed tag: $TAG"
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: writetofillet-*
          merge-multiple: true
          path: ./artifacts
      - name: Publish prerelease with artifacts
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: CI Build ${{ env.TAG }}
          prerelease: true
          make_latest: false
          files: |
            artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
